#!/bin/bash
# test specific setup and execution

# copy default unit test configs
pushd socorro/unittest/config
for file in *.py.dist
do
configp $file `basename $file .dist`
done
popd

errors=0
while read d
do
    if [ ! -f "$d/__init__.py" ]
    then
        echo "$d is missing an __init__.py file, tests will not run"
        errors=$((errors+1))
    fi
done < <(find socorro/unittest/* -not -name logs -type d)

if [ $errors != 0 ]
then
    exit 1
fi

# iff on jenkins
if [ $JENKINS_HOME ]
then
    # Override hostnames for jenkins
    export DB_HOST="jenkins-pg92"
    export RABBITMQ_HOST="rabbitmq-zlb.webapp.phx1.mozilla.com"
    export RABBITMQ_USERNAME="socorro-jenkins"
    export RABBITMQ_PASSWORD="aPassword"
    export RABBITMQ_VHOST="socorro-jenkins"
    export ES_HOST="jenkins-es20"
    export ES_URLS="http://jenkins-es20:9200"

    # RHEL postgres 9 RPM installs pg_config here, psycopg2 needs it
    export PATH=/usr/pgsql-9.2/bin:$PATH
    echo "My path is $PATH"
fi

#test
# run unit tests
database_username=test
database_hostname=$DB_HOST
database_password=aPassword
database_port=5432
database_superusername=test
database_superuserpassword=aPassword
elasticSearchHostname=$ES_HOST
elasticsearch_urls=$ES_URLS
# jenkins only settings for the pre-configman components
# can be removed when all tests are updated to use configman
if [ $(WORKSPACE) ]; then cd socorro/unittest/config; cp $(JENKINS_CONF) commonconfig.py; fi;
# setup any unset test configs and databases without overwriting existing files
cd config; for file in *.ini-dist; do if [ ! -f `basename $$file -dist` ]; then cp $$file `basename $$file -dist`; fi; done
PYTHONPATH=$(PYTHONPATH) $(SETUPDB) --database_name=socorro_integration_test --database_username=$(database_username) --database_hostname=$(database_hostname) --database_password=$(database_password) --database_port=$(DB_PORT) --database_superusername=$(database_superusername) --database_superuserpassword=$(database_superuserpassword) --dropdb --logging.stderr_error_logging_level=40 --unlogged
PYTHONPATH=$(PYTHONPATH) $(SETUPDB) --database_name=socorro_test --database_username=$(database_username) --database_hostname=$(database_hostname) --database_password=$(database_password) --database_port=$(DB_PORT) --database_superusername=$(database_superusername) --database_superuserpassword=$(database_superuserpassword) --dropdb --no_schema --logging.stderr_error_logging_level=40 --unlogged
cd socorro/unittest/config; for file in *.py.dist; do if [ ! -f `basename $$file .dist` ]; then cp $$file `basename $$file .dist`; fi; done
# run tests with coverage
rm -f coverage.xml
PYTHONPATH=$(PYTHONPATH) $(COVERAGE) run $(NOSE)
$(COVERAGE) xml
#test-webapp
#webapp-django
cd webapp-django; ./bin/jenkins.sh


# run socorro integration test
echo "Running integration test..."
./scripts/rabbitmq-integration-test.sh --destroy
./scripts/elasticsearch-integration-test.sh
